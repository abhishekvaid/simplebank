# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: deploy to production (AWS ECR)

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    # permissions:
    #   id-token: write # Required for OIDC token access
    #   contents: read

    steps:
      - name: Checkout Code into runner
        uses: actions/checkout@v4

      - name: Modify app.env from AWS SecretsManager
        run: aws secretsmanager get-secret-value --secret-id simple_bank | jq -r '.SecretString|fromjson|to_entries|.[]|"\(.key)=\(.value)"' > app.env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::442426856140:role/ci-deployment
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.3.0

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: himavisoft/simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG



          aws ecr get-login-password --region <region> | docker login --username AWS --password-stdin 295952938604.dkr.ecr.us-east-1.amazonaws.com/himavisoft/simplebank:141e7a23a96d2a1f1699d719e6c1fcad2def7072
